{
  "referenceId": "usVi2",
  "version": "1.0",
  "name": "LinuxChangeHostName",
  "license": "EULA",
  "description": null,
  "baseScript": "#!/bin/bash\n\nOS=`uname -s`\nREV=`uname -r`\nMACH=`uname -m`\n\nfunction check_distro() {\n        KERNEL=`uname -r`\n        if [ -f /etc/centos-release ] ; then\n                DIST=\"CentOS\"\n                #VER=`cat /etc/centos-release | grep -o '[0-9]\\+\\.[0-9]\\+\\.[0-9]\\+'`\n\t\t\t\tVER=`cat /etc/centos-release | grep -oP '(?<= )[0-9]+(?=\\.)'`\n        elif [ -f /etc/photon-release ] ; then\n                DIST=\"PhotonOS\"\n        elif [ -d /etc/coreos/ ] ; then\n                DIST=\"CoreOS\"\n        elif [ -f /etc/oracle-release ] ; then\n                                DIST=`Oracle`\n                PSUEDONAME=`cat /etc/oracle-release | sed s/.*\\(// | sed s/\\)//`\n                REV=`cat /etc/oracle-release | sed s/.*release\\ // | sed s/\\ .*//`\n        elif [ -f /etc/redhat-release ] && [ ! -f /etc/oracle-release ]; then\n                if grep -iq atomic /etc/redhat-release; then\n                    DIST=\"RedHatAtomic\"\n                else\n                    DIST=\"RedHat\"\n                fi\n                PSUEDONAME=`cat /etc/redhat-release | sed s/.*\\(// | sed s/\\)//`\n                REV=`cat /etc/redhat-release | sed s/.*release\\ // | sed s/\\ .*//`\n        elif [ -f /etc/SuSE-release ] ; then\n                DIST=\"SuSE\"\n                VER=`cat /etc/SuSE-release | awk `/VERSION/ { print $3 }``\n                REV=`cat /etc/SuSE-release | awk `/PATCHLEVEL/ { print $3 }``\n        elif [ -f /etc/mandrake-release ] ; then\n                DIST=\"Mandrake\"\n                PSUEDONAME=`cat /etc/mandrake-release | sed s/.*\\(// | sed s/\\)//`\n                REV=`cat /etc/mandrake-release | sed s/.*release\\ // | sed s/\\ .*//`\n        elif [ -f /etc/debian_version ] ; then\n                                DIST=$(lsb_release -si)\n                VER=$(lsb_release -rs)\n        elif [ -f /etc/lsb-release ] ; then\n                DIST=$(lsb_release -si)\n                VER=$(lsb_release -rs)\n                if [ $VER == 15.04 ] || [ $VER == 15.10 ] ; then\n                    DEB_SYSTEMD=$VER\n                fi\n        elif [ -f /etc/os-release ] ; then\n                NAME=`cat os-release | awk -F= `/NAME=/ { print $2; exit }` | sed \"s/\\\"//g\"`\n                if [ \"$NAME\" == \"SLES\" ]; then\n                    DIST=\"SuSE\"\n                    VER=`cat os-release | awk -F\\\" `/VERSION_ID=/ { print $2 }` | awk -F. `{ print $1 }``\n                    REV=`cat os-release | awk -F\\\" `/VERSION_ID=/ { print $2 }` | awk -F. `{ print $2 }``\n                fi\n        else\n            echo \"WARNING: DISTRO NOT DETERMINED\"\n        fi\n\n        echo \"`date +'%F-%T'` [INFO] : DIST=${DIST},VER=${VER},REV=${REV} distribution detected...\"\n}\n\nfunction change_hostname() {\n\tnewHostName=${1}\n    domainName=${2}\n    \n\tif [ \"${DIST}\" == \"Ubuntu\" ]; then\n\t\tif [ \"${VER}\" == \"16.04\" ]; then\n\t\t\tif [ \"${CURR_HOSTNAME}\" == \"${newHostName}\" ]; then \n\t\t\t\techo \"`date +'%F-%T'` [INFO] : Hostname ${newHostName} already configured. No changes made\"\n\t\t\telse\n               \t/usr/bin/hostnamectl set-hostname ${newHostName} --pretty --static\n                echo \"`date +'%F-%T'` [INFO] : Setting hosts file for ${newHostName}\"\n\t\t\t\tsed -i 's/127.0.1.1.*/127.0.1.1\\t'\"${newHostName}\".\"${domainName}\\t${newHostName}\"'/g' /etc/hosts\n            \techo \"`date +'%F-%T'` [INFO] : Rebooting VM ${newHostName}\"\n\t\t\t\treboot now\n            fi\n\t\telse\n\t\t\tCURR_HOSTNAME=$(cat /etc/hostname)\n            echo \"`date +'%F-%T'` [INFO] : Configuring Hostname ${newHostname}\"\n\t\t\tif [ \"${CURR_HOSTNAME}\" == \"${newHostName}\" ]; then \n\t\t\t\techo \"`date +'%F-%T'` [INFO] : Hostname ${newHostName} already configured. No changes made\"\n\t\t\telse\n            \techo \"`date +'%F-%T'` [INFO] : Setting new Hostname ${newHostName}\"\n\t\t\t\t#sed -i \"s/${CURR_HOSTNAME}/${newHostName}/g\" /etc/hostname\n                echo ${newHostName} > /etc/hostname\n                echo \"`date +'%F-%T'` [INFO] : Setting hosts file for ${newHostName}\"\n\t\t\t\tsed -i 's/127.0.1.1.*/127.0.1.1\\t'\"${newHostName}\".\"${domainName}\\t${newHostName}\"'/g' /etc/hosts\n                echo \"`date +'%F-%T'` [INFO] : Rebooting VM ${newHostName}\"\n\t\t\t\treboot now\n\t\t\tfi\n\t\tfi\n\tfi\n\t\n\tif [ \"${DIST}\" == \"CentOS\" ]; then\n\t\tif [ \"${VER}\" == \"7\" ]; then\n\t\t\techo \"`date +'%F-%T'` [INFO] : ${DIST} ${VER} distribution detected...\"\n\t\t\t/usr/bin/hostnamectl set-hostname ${newHostName}.${domainName} --pretty --static\n\t\telse\n\t\t\tCURR_HOSTNAME=`hostname`\n            if [ \"${CURR_HOSTNAME}\" == \"${newHostName}\" ]; then \n\t\t\t\techo \"`date +'%F-%T'` [INFO] : Hostname already configured. No changes made\"\n\t\t\telse\n            \techo \"`date +'%F-%T'` [INFO] : Setting new Hostname ${newHostName}.\"\n\t\t\t\tsed -i 's/^HOSTNAME=.*/'\"HOSTNAME=${newHostName}\".\"${domainName}\"'/g' /etc/sysconfig/network\n                #sed -i 's/127.0.1.1.*/127.0.1.1\\t'\"${newHostName}\".\"${domainName}\\t${newHostName}\"'/g' /etc/hosts\n                \n                if grep -q \"${newHostName}\" /etc/hosts; then\n\t\t\t\t\techo \"`date +'%F-%T'` [INFO] : /etc/hosts file entry already configured\"\n              \telse\t\n                \techo \"`date +'%F-%T'` [INFO] : Configuring /etc/hosts\"\n                    echo \"127.0.0.1\\t${newHostName}.${domainName}\\t${newHostName}\" >> /etc/hosts\n              \tfi\n                echo \"`date +'%F-%T'` [INFO] : Rebooting VM\"\n\t\t\t\treboot now\n\t\t\tfi\n\t\tfi\n\tfi\n\n}\n\nfunction main () {\necho \"`date +'%F-%T'` [INFO] Checking Linux Distribution\"\ncheck_distro\necho \"`date +'%F-%T'` [INFO] Configuring new HostName $1 and Domain Name $2\"\nchange_hostname $1 $2\n}\n\nmain $newHostName $domainName",
  "envs": [
    {
      "prop": "newHostName",
      "val": "VMName",
      "hidden": false,
      "eval": null
    },
    {
      "prop": "domainName",
      "val": "domain.com",
      "hidden": false,
      "eval": null
    }
  ],
  "scriptArgs": null,
  "scriptLang": "SHELL",
  "timeout": 30
}